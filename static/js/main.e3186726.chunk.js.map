{"version":3,"sources":["MovieCard.js","SearchMovies.js","index.js"],"names":["MovieCard","props","className","src","poster","title","rd","rating","overview","SearchMovies","useState","query","setQuery","movies","setMovies","searchMovies","event","a","preventDefault","URL","fetch","res","json","data","results","console","log","onSubmit","htmlFor","value","onChange","target","name","type","placeholder","filter","movie","poster_path","map","release_date","vote_average","id","Main","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iRAoBeA,MAlBf,SAAmBC,GACjB,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,cAAcC,IAAKF,EAAMG,SACxC,sBAAKF,UAAU,gBAAf,UACE,oBAAIA,UAAU,cAAd,SAA6BD,EAAMI,QACnC,4BACE,mDAAsBJ,EAAMK,QAE9B,4BACE,6CAAgBL,EAAMM,YAExB,mBAAGL,UAAU,aAAb,SAA2BD,EAAMO,kBCwD1BC,MAzDf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAY,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,yDACnBD,EAAME,kBACFP,EAFe,wBAGXQ,EAHW,kHAGsGR,EAHtG,iDAKGS,MAAMD,GALT,cAKTE,EALS,gBAMIA,EAAIC,OANR,OAMTC,EANS,OAOfT,EAAUS,EAAKC,SAPA,kDASfC,QAAQC,IAAR,MATe,gCAYjBd,EAAS,sBAZQ,0DAAH,sDAgBlB,OACE,gCACE,uBAAMV,UAAU,OAAOyB,SAAUZ,EAAjC,UACE,uBAAOa,QAAQ,QAAQ1B,UAAU,QAAjC,wBAGA,uBACE2B,MAAOlB,EACPmB,SAAU,SAACd,GAAD,OAAWJ,EAASI,EAAMe,OAAOF,QAC3C3B,UAAU,QACV8B,KAAK,QACLC,KAAK,OACLC,YAAY,iBAEd,wBAAQD,KAAK,SAAS/B,UAAU,SAAhC,uBAIF,qBAAKA,UAAU,YAAf,SACGW,EACEsB,QAAO,SAACC,GAAD,OAAWA,EAAMC,eACxBC,KAAI,SAACF,GAAD,OACH,cAAC,EAAD,CACE/B,MAAO+B,EAAM/B,MAEbD,OAAM,0DAAqDgC,EAAMC,aACjE/B,GAAI8B,EAAMG,aACVhC,OAAQ6B,EAAMI,aACdhC,SAAU4B,EAAM5B,UAJX4B,EAAMK,aCnDnBC,E,4JACJ,WACE,OACA,sBAAKxC,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,gCACA,cAAC,EAAD,W,GALayC,IAAMC,WAWzBC,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.e3186726.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction MovieCard(props) {\n  return (\n    <div className=\"card\">\n      <img className=\"card--image\" src={props.poster} />\n      <div className=\"card--content\">\n        <h3 className=\"card--title\">{props.title}</h3>\n        <p>\n          <small>RELEASE DATE: {props.rd}</small>\n        </p>\n        <p>\n          <small>RATING: {props.rating}</small>\n        </p>\n        <p className=\"card--desc\">{props.overview}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default MovieCard;\n","//Clave de la API (v3 auth)\n//2ce693a30b3cee73af3b58f365b4f4c7\n\n//Ejemplo de solicitud de API\n//https://api.themoviedb.org/3/movie/550?api_key=2ce693a30b3cee73af3b58f365b4f4c7\n\n//Token de acceso de lectura a la API (v4 auth)\n// eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyY2U2OTNhMzBiM2NlZTczYWYzYjU4ZjM2NWI0ZjRjNyIsInN1YiI6IjYwZWIzYzg3MjljNjI2MDA0N2M0MWVmMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.bDsTozyohTufpJWaCN4MRbLXq6LLsry4V_Hc-l_nH7E\n\n// import { div } from \"prelude-ls\"\nimport React, { useState } from \"react\";\nimport MovieCard from \"./MovieCard\";\n\nfunction SearchMovies() {\n  const [query, setQuery] = useState(\"\");\n  const [movies, setMovies] = useState([]);\n\n  const searchMovies = async (event) => {\n    event.preventDefault();\n    if (query) {\n      const URL = `https://api.themoviedb.org/3/search/movie?api_key=2ce693a30b3cee73af3b58f365b4f4c7&language=en-US&query=${query}&page=1&include_adult=false`;\n      try {\n        const res = await fetch(URL);\n        const data = await res.json();\n        setMovies(data.results);\n      } catch (err) {\n        console.log(err);\n      }\n    } else {\n      setQuery(\"Write a movie name\");\n    }\n  };\n\n  return (\n    <div>\n      <form className=\"form\" onSubmit={searchMovies}>\n        <label htmlFor=\"query\" className=\"label\">\n          Movie name\n        </label>\n        <input\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n          className=\"input\"\n          name=\"query\"\n          type=\"text\"\n          placeholder=\"i.e. Mad max\"\n        />\n        <button type=\"submit\" className=\"button\">\n          Search\n        </button>\n      </form>\n      <div className=\"card-list\">\n        {movies\n          .filter((movie) => movie.poster_path)\n          .map((movie) => (\n            <MovieCard\n              title={movie.title}\n              key={movie.id}\n              poster={`https://image.tmdb.org/t/p/w185_and_h278_bestv2/${movie.poster_path}`}\n              rd={movie.release_date}\n              rating={movie.vote_average}\n              overview={movie.overview}\n            />\n          ))}\n      </div>\n    </div>\n  );\n}\n// }\n\nexport default SearchMovies;\n\n/* <div key={movie.id} className=\"card\">\n                            <img className=\"card--image\" src={`https://image.tmdb.org/t/p/w185_and_h278_bestv2/${movie.poster_path}`}/>\n                            <div className=\"card--content\">\n                                <h3 className=\"card--title\">{movie.title}</h3>\n                                <p><small>RELEASE DATE: {movie.release_date}</small></p>\n                                <p><small>RATING: {movie.vote_average}</small></p>\n                                <p className=\"card--desc\">{movie.overview}</p>\n                            </div>\n                        </div> */\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SearchMovies from './SearchMovies';\n// import reportWebVitals from './reportWebVitals';\n\nclass Main extends React.Component {\n  render() {\n    return (\n    <div className=\"container\">\n      <h1 className=\"title\">React Movie Search</h1>\n      <SearchMovies/>\n    </div>\n    )\n  }\n}\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}